# ==== BOOKING
input BookingRoomCreationInput {
    userId: String!,
    roomId: String!
}

type Room {
    id: ID!,
    name: String
}

# ==== Auth
input TokenInput {
    username: String!,
    password: String!,
}

type TokenOutput {
    accessToken: String!,
    expiresIn: Int!,
    refreshExpiresIn: Int!,
    refreshToken: String!,
    tokenType: String!,
    scope: String!
}

# ==== USER
input UserCreationInput {
    username: String!,
    password: String!,
    email: String!
}

input UserUpdatingInput {
    id: ID!,
    username: String!,
    email: String!
}

type User {
    id: ID!,
    username: String!,
    email: String
}

# ==== QUERY ====
type Query {
    fetchAllRooms: [Room!]

    fetchAllUsers: [User!]
}

# ==== MUTATION ====
type Mutation {
    createBooking(bookingRoomCreationInput: BookingRoomCreationInput!): String!

    token(tokenInput: TokenInput): TokenOutput!
    createUser(userCreationInput: UserCreationInput!): ID!
    deleteUserById(id: ID!): ID!
    updateUserById(userUpdatingInput: UserUpdatingInput!): ID!
}