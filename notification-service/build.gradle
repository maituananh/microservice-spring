plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.anhmt'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
	set('mysqlConnector', "9.1.0")
	set('mapstructVersion', "1.6.3")
	set('projectlombok', "1.18.30")
	set('lombokMapstructBinding', "0.2.0")
}

compileJava {
	options.compilerArgs += [
			'-Amapstruct.suppressGeneratorTimestamp=true',
			'-Amapstruct.suppressGeneratorVersionInfoComment=true',
			'-Amapstruct.verbose=true'
	]
}

dependencies {
	// Web
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// Security
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
//    implementation 'org.springframework.boot:spring-boot-starter-security'

	// Database
//	implementation 'org.liquibase:liquibase-core'
//	implementation "com.mysql:mysql-connector-j:${mysqlConnector}"
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// mapstruct
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	// Kafka
	implementation 'org.springframework.kafka:spring-kafka'

	// lombok
	compileOnly "org.projectlombok:lombok:${projectlombok}"
	annotationProcessor "org.projectlombok:lombok:${projectlombok}"
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBinding}"

	// Tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
